<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sEnemy</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>path = path_add() // Create

// CREATE EVENT//

//enemy variables
redHealth = 6
originalX = x
originalY = y
enemyState = "roaming"
pathCounter = 0
droneCreated = false

walkListenRange = 65
bulletListenRange = 400
siteRange = 2000
siteSize = 120

countValue = 0

doorOpened = false
openDoorTime = 2
openDoorTimer = 0

seePlayer = false
seePlayerTime = 1
seePlayerTimer = 0

checkDirectionTime = 1
checkDirectionCounter = 0

playerX = 0
playerY = 0

lastShot = 60
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Enemy Control // STEP //

// STEP EVENT //

/* Moving */

enemySpeed = 120/room_speed
runSpeed = 200/room_speed
hitWall = false
facing = image_angle
invincible = false

if(image_angle &gt; 360)
{
    image_angle -= 360
} else if (image_angle &lt;= 0) 
{
    image_angle += 360
}

image_angle = direction

if (distance_to_object(oPlayer) &lt; walkListenRange &amp;&amp; global.playerMoving == true)
{
    update_player_xy()
    enemyState = set_state_to("searching")
}

if ((distance_to_object(oPlayer) &lt; bulletListenRange) &amp;&amp; oPlayer.lastShot == 0) 
{
    update_player_xy()
    enemyState = set_state_to("searching")
}

goPlayer = true

if seePlayer = true 
{
    seePlayerTimer += 1/room_speed
}

if i_have_line_of_sight_to(oPlayer,siteRange,siteSize){

    seePlayer = true
    look_at(oPlayer)
    if doorOpened == false
    {
        if enemyState != "openDoor"
        {
            update_player_xy()
        }
        
        enemyState = set_state_to("openDoor")
    }

    if doorOpened == true
    {
        update_player_xy()
        enemyState = set_state_to("chase")
        
        goPlayer = false      
    }

}

if enemyState == "openDoor" 
{       
    invincible = true

    if seePlayerTimer &gt;= seePlayerTime
    {   
        enemyState = set_state_to("chase")
        
        if droneCreated == false
        {
        instance_create(x,y,oDrone)
        }
        droneCreated = true
            
        doorOpened = true
        
    }
    pathCounter += 1
    speed = 0

}
if enemyState == "chase" {

    speed = runSpeed
    
    if pathCounter == 1 &amp;&amp; goPlayer == true{
        if (mp_grid_path(global.grid, path, x, y, playerX, playerY, 1)) {
            path_start(path, speed, path_action_stop, true)
        }
    } else {
        speed = 0
    }
    pathCounter += 1



    if i_have_line_of_sight_to(oPlayer,siteRange,siteSize) == false {
        enemyState = "searching"
    }

    if (lastShot &gt;= 15) &amp;&amp; goPlayer == false{
        path_end()
        direction = point_direction(x,y,playerX,playerY)
        myBullet = instance_create(x,y,oSlowBullet)
        myBullet.direction = point_direction(x,y,playerX,playerY)
        myBullet.speed = 1000/room_speed
        myBullet.facing = myBullet.direction
        lastShot = 0
    }

    if distance_to_point(playerX,playerY) &lt; 15 { //(x == playerX &amp;&amp; y == playerY) {
        enemyState = set_state_to("lookAround")
    }
}

lastShot += 60/room_speed

if enemyState == "roaming" {

    speed = enemySpeed

    if pathCounter == 0 {
        if instance = "1_1" {
            path_start(pEnemy1_1, speed, path_action_continue, 0)
        } else if instance = "1_2"{
            path_start(pEnemy1_2, speed, path_action_continue, 0)
        }
    }

    pathCounter += 1


}
if enemyState == "searching"{
    
    enemyState = search_for_player(runSpeed,"searching","lookaround")

}
if enemyState == "lookaround" {

    if ((direction % 90) != 0) {
        direction += (90 - (direction % 90))
    }
    if pathCounter == 0 {
        originalDirection = direction
    }

    pathCounter += 1
    speed = 0

    checkDirectionCounter += 1/room_speed

    if (checkDirectionCounter &gt;= checkDirectionTime) {
        direction += 90
        if (direction == originalDirection) {
            enemyState = set_state_to("getback")
        }
        checkDirectionCounter = 0
    }
}
if enemyState == "getback" {

    speed = enemySpeed

    if pathCounter == 0 {
        if (mp_grid_path(global.grid, path, x, y, originalX, originalY, 1)){
            path_start(path, speed, path_action_stop, true)
        }
    }

    pathCounter += 1

    if(x == originalX &amp;&amp; y == originalY){
        enemyState = set_state_to("roaming")
    }
}

/* Damage */

incomingBullet = instance_place(x,y,oBullet)

if instance_exists(incomingBullet) {
    with incomingBullet {
        instance_destroy()
    }
    if invincible == false {
        redHealth -= 1
    }
}

if redHealth &lt;= 0 {
        instance_destroy()
}

if enemyState == "openDoor"
{
    if seePlayerTimer &lt; seePlayerTime
    {
        path_end()
        speed = 0
    }

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
draw_self()
draw_set_colour(c_black);
draw_set_halign(fa_center)
draw_set_valign(fa_middle)
if enemyState == "openDoor"{
    draw_sprite(sShield,0,x,y)
}
draw_text (oPlayer.x, oPlayer.y - 32,oEnemy.enemyState)
draw_text (oPlayer.x, oPlayer.y + 32,global.playerMoving)

draw_set_colour(c_red);
draw_circle(playerX, playerY, 10, true);

draw_set_colour(c_orange);
draw_circle(x, y, walkListenRange, true);

draw_set_colour(c_yellow);
draw_circle(x, y, bulletListenRange, true);

draw_set_colour(c_purple)
Range = siteRange
Vision = siteSize/2


var x1 = x + lengthdir_x(Range, image_angle - Vision)
var y1 = y + lengthdir_y(Range, image_angle - Vision)
var x2 = x + lengthdir_x(Range, image_angle + Vision)
var y2 = y + lengthdir_y(Range, image_angle + Vision)

draw_triangle(x,y,x1,y1,x2,y2,true)
/*
draw_set_halign(fa_center)
draw_set_valign(fa_middle)

draw_set_alpha(0.25)
draw_circle_colour(playerX, playerY, 10,c_red,c_red,false)
draw_set_alpha(1)
//draw_text (oPlayer.x, oPlayer.y + 32,oPlayer.lastShot)
draw_text (oPlayer.x - 40, oPlayer.y,oEnemy.enemyState)

/*
if instance_exists(oEnemy)
{
    draw_set_halign(fa_center)
    draw_set_valign(fa_middle)
    draw_self()
    draw_set_alpha(.1)
    draw_circle_colour(oEnemy.x,oEnemy.y,oEnemy.listenRange, c_red, c_red, false)

    var x1 = x + lengthdir_x(siteRange, image_angle - (siteSize/2))
    var y1 = y + lengthdir_y(siteRange, image_angle - (siteSize/2))
    var x2 = x + lengthdir_x(siteRange, image_angle + (siteSize/2))
    var y2 = y + lengthdir_y(siteRange, image_angle + (siteSize/2))

    draw_triangle_colour(x,y,x1,y1,x2,y2, c_blue, c_blue, c_blue, false)
    draw_set_alpha(1)

    //draw_text (oPlayer.x, oPlayer.y + 32,oPlayer.lastShot)
    //draw_text (oPlayer.x - 40, oPlayer.y,oEnemy.pathCounter)
    draw_text (oPlayer.x, oPlayer.y - 32,oWhite.cellState)
}
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
